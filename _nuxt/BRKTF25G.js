import{q as l,Y as i,y as d,x as o,C as c,z as u}from"./DFVm4NPh.js";const n={addressId:"",addressLine:"1",ward:"",city:"",province:"",district:""},g={...n},S={values:n,errors:g,...u},f=l("Address",{state:()=>({fields:S,uUDSSelectUserAddressEntity:[]}),getters:{fieldValues:s=>s.fields.values,fieldErrors:s=>s.fields.errors},actions:{SetFields(s){this.fields=s},ResetStore(){this.fields.resetForm()},async GetAddress(){const s=i(),t=d();t.LoadingChange(!0);const e=await s.api.v1.UDSSelectUserAddress.$get({});t.LoadingChange(!1),e.response&&(this.uUDSSelectUserAddressEntity=e.response)},async UpdateAddress(){const s=i(),t=o(),e=c(this.fields.values,n),a=d();a.LoadingChange(!0);const r=await s.api.v1.UDSUpdateUserAddress.$put({body:{addressId:e.addressId,addressLine:e.addressLine,ward:e.ward,city:e.province,province:e.province,district:e.district}});return a.LoadingChange(!1),r.success?(t.SetFormMessage(r,!0),!0):(t.SetFormMessage(r,!0),!1)},async InsertAddress(){const s=i(),t=o(),e=c(this.fields.values,n),a=d();a.LoadingChange(!0);const r=await s.api.v1.UDSInsertUserAddress.$post({body:{addressLine:e.addressLine,ward:e.ward,city:e.province,province:e.province,district:e.district}});return a.LoadingChange(!1),r.success?(t.SetFormMessage(r,!0),!0):(t.SetFormMessage(r,!0),!1)},async RemoveAddress(s){console.log("a");const t=i(),e=o(),a=d();a.LoadingChange(!0);const r=await t.api.v1.UDSDeleteUserAddress.$patch({body:{addressId:s}});return a.LoadingChange(!1),r.success?(e.SetFormMessage(r,!0),!0):(e.SetFormMessage(r,!0),!1)}}});export{f as u};
